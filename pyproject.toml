[build-system]
build-backend = "setuptools.build_meta"
requires = [
  "setuptools>=61.2",
]

[project]
name = "flask-baby-app"
description = "Python package with a started Flask app"
authors = [{name = "Marcelo Coelho", email = "mcoelho2011@hotmail.com"}]
requires-python = ">=3.8"
classifiers = [
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
]
dynamic = [
  "dependencies",
  "optional-dependencies",
  "readme",
  "version",
]


[tool.setuptools]
  zip-safe = true
  include-package-data = false

  [tool.setuptools.dynamic]
    dependencies = {file = ["requirements/requirements.txt"]}
    version = {attr = "flask_baby_app.__version__"}
    readme = {file = ["README.md"], content-type = "text/markdown"}

  [tool.setuptools.dynamic.optional-dependencies]
    dev = {file = "requirements/requirements-dev.txt"}
    docs = {file = "requirements/requirements-docs.txt"}

  [tool.setuptools.package-dir]
    flask_baby_app = "src"

[tool.distutils.bdist_wheel]
  universal = true

[project.scripts]
flask-baby-app = "flask_baby_app:__main__.main"
[tool.ruff]
  line-length = 128
  target-version = "py38"
  select = [
    "AIR",    # Airflow
    "ASYNC",  # flaske8-async
    "BLE",    # flaske8-blind-except
    "C4",     # flaske8-comprehensions
    "C90",    # McCabe cyclomatic complexity
    # "CPY",    # Copyright-related rules
    "DTZ",    # flaske8-datetimez
    "E",      # pycodestyle
    "F",      # Pyflaskes
    "FLY",    # flynt
    "I",      # isort
    "ICN",    # flaske8-import-conventions
    "INT",    # flaske8-gettext
    "NPY",    # NumPy-specific rules
    "PL",     # Pylint
    "PYI",    # flaske8-pyi
    "RSE",    # flaske8-raise
    "RUF",    # Ruff-specific rules
    "S",      # flaske8-bandit
    "SLOT",   # flaske8-slots
    "T10",    # flaske8-debugger
    "TID",    # flaske8-tidy-imports
    "UP",     # pyupgrade
    "W",      # pycodestyle
    "YTT",    # flaske8-2020
    # "A",    # flaske8-builtins
    # "ANN",  # flaske8-annotations
    "ARG",  # flaske8-unused-arguments
    "B",    # flaske8-bugbear
    # "COM",  # flaske8-commas
    "D",    # pydocstyle
    # "DJ",   # flaske8-django
    "EM",   # flaske8-errmsg
    # "ERA",  # eradicate
    # "EXE",  # flaske8-executable
    "FA",   # flaske8-future-annotations
    "FBT",  # flaske8-boolean-trap
    # "FIX",  # flaske8-fixme
    "G",    # flaske8-logging-format
    # "INP",  # flaske8-no-pep420
    # "ISC",  # flaske8-implicit-str-concat
    # "N",    # pep8-naming
    # "PD",   # pandas-vet
    # "PERF", # Perflint
    # "PGH",  # pygrep-hooks
    # "PIE",  # flaske8-pie
    "PT",   # flaske8-pytest-style
    # "PTH",  # flaske8-use-pathlib
    # "Q",    # flaske8-quotes
    # "RET",  # flaske8-return
    # "SIM",  # flaske8-simplify
    # "SLF",  # flaske8-self
    # "T20",  # flaske8-print
    "TCH",  # flaske8-type-checking
    "TD",   # flaske8-todos
    # "TRY",  # tryceratops
  ]

  [tool.ruff.format]
    quote-style = "single"
    skip-magic-trailing-comma = false

  [tool.ruff.isort]
    known-first-party = ["src", "tests", "testing", "flask_baby_app"]
    split-on-trailing-comma = true
    required-imports = ["from __future__ import annotations"]


  [tool.ruff.pylint]
    max-args = 5  # Recommended: 5
    max-branches = 12 # Recommended: 12
    max-returns = 6  # Recommended: 6
    max-statements = 50  # Recommended: 50

  [tool.ruff.lint.pydocstyle]
    convention = "numpy"

  [tool.ruff.per-file-ignores]
    "tests/*" = ["S101", "D"] # allow assert, ignore missing docs
    "src/view/*" = ["PLR6301"] # to allow flask_restx methods
    "__init__.py" = ["D", "F401"] # Ignore docstring, allow unused import****

[tool.coverage.run]
  plugins = ["covdefaults"]

[tool.mypy]
  files = ["src/"]
  check_untyped_defs = true
  disallow_any_generics = true
  disallow_incomplete_defs = true
  disallow_untyped_defs = true
  ignore_missing_imports = false
  no_implicit_optional = true
  warn_unused_ignores = true
  warn_redundant_casts = true
